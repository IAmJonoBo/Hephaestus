[build-system]
requires = ["hatchling>=1.25"]
build-backend = "hatchling.build"

[project]
name = "hephaestus"
version = "0.2.0"
description = "Standalone developer toolkit for orchestrating quality and refactoring workflows."
readme = "README.md"
requires-python = ">=3.12"
authors = [{ name = "Hephaestus Team", email = "opensource@hephaestus.dev" }]
license = { file = "LICENSE" }
keywords = ["refactoring", "quality", "tooling", "cli"]
dependencies = [
  "typer[all]>=0.19.2",
  "rich>=14.1.0",
  "libcst>=1.8.5",
  "pydantic>=2.12.0",
  "pyyaml>=6.0.3",
  "cryptography>=43.0.3",
  "tomli; python_version < '3.11'",
]

[project.optional-dependencies]
qa = [
  "coverage[toml]>=7.4",
  "pytest>=8.2",
  "pytest-cov>=5.0",
  "pytest-randomly>=3.15",
  "bandit>=1.7.9",
]
dev = [
  "pre-commit>=4.3.0",
  "ruff>=0.14.0",
  "black>=25.9.0",
  "mypy>=1.18.2",
  "pip-audit>=2.9.0",
  "yamllint>=1.37.1",
  "types-PyYAML>=6.0.12.20250915",
  "mkdocs>=1.6.1",
  "mkdocs-material>=9.6.21",
  "pymdown-extensions>=10.16.1",
]
telemetry = [
  "opentelemetry-api>=1.20.0",
  "opentelemetry-sdk>=1.20.0",
  "opentelemetry-exporter-otlp>=1.20.0",
]
api = [
  "fastapi>=0.115.0",
  "uvicorn[standard]>=0.32.0",
]

[project.scripts]
hephaestus = "hephaestus.cli:app"

[tool.hephaestus.toolkit]
default_config = "hephaestus-toolkit/refactoring/config/refactor.config.yaml"
workspace_root = "."

[tool.pytest.ini_options]
addopts = "-ra --cov=src/hephaestus --cov-report=term-missing --cov-report=xml"
pythonpath = ["src"]
filterwarnings = [
  "error",
] # Frontier standard: treat all warnings as errors to prevent quality degradation

[tool.black]
line-length = 100
target-version = ["py312"]

[tool.ruff]
line-length = 100
src = ["src", "tests", "hephaestus-toolkit"]
target-version = "py312"

[tool.ruff.lint]
select = [
  "E",
  "F",
  "I",
  "UP",
  "B",
  "C4",
] # Frontier linting profile: errors, imports, upgrades, bugs, comprehensions
ignore = ["E501"] # Line length handled by ruff format

[tool.ruff.format]
quote-style = "double"

[tool.mypy]
python_version = "3.12"
plugins = ["pydantic.mypy"]
strict_optional = true
disallow_untyped_defs = true
warn_unused_ignores = true
warn_return_any = true
warn_redundant_casts = true
warn_unused_configs = true
mypy_path = ["src"]

[tool.coverage.run]
branch = true               # Enable branch coverage analysis
source = ["src/hephaestus"]

[tool.coverage.report]
fail_under = 85     # Frontier standard: minimum 85% test coverage
show_missing = true # Show lines not covered by tests
