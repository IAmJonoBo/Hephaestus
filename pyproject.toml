[build-system]
requires = ["hatchling>=1.25"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/hephaestus"]

[project]
name = "hephaestus-toolkit"
version = "0.2.0"
description = "Developer toolkit for code quality, refactoring, and release automation"
readme = "README.md"
requires-python = ">=3.12"
authors = [{ name = "Hephaestus Team", email = "opensource@hephaestus.dev" }]
license = { file = "LICENSE" }
keywords = [
  "quality-gates",
  "refactoring",
  "cleanup",
  "release-automation",
  "developer-tools",
  "ci-cd",
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Quality Assurance",
  "Topic :: Software Development :: Testing",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
]
dependencies = [
  "typer>=0.19.2",
  "rich>=14.1.0",
  "libcst>=1.8.5",
  "pydantic>=2.12.0",
  "pyyaml>=6.0.3",
  "cryptography>=46.0.2",
  "requests>=2.32.0",
  "packaging>=25.0",
  "tomli; python_version < '3.11'",
]

[project.urls]
Homepage = "https://github.com/IAmJonoBo/Hephaestus"
Documentation = "https://iamjonobo.github.io/Hephaestus/"
Repository = "https://github.com/IAmJonoBo/Hephaestus"
Issues = "https://github.com/IAmJonoBo/Hephaestus/issues"
Changelog = "https://github.com/IAmJonoBo/Hephaestus/blob/main/CHANGELOG.md"
Security = "https://github.com/IAmJonoBo/Hephaestus/blob/main/SECURITY.md"

[project.optional-dependencies]
qa = [
  "coverage[toml]>=7.10.7",
  "pytest>=8.4.2",
  "pytest-cov>=7.0.0",
  "pytest-randomly>=4.0.1",
  "pytest-asyncio>=1.2.0",
  "httpx>=0.28.1",
  "bandit>=1.8.6",
  "prometheus-client>=0.20.0",
]
dev = [
  "pre-commit>=4.3.0",
  "ruff>=0.14.0",
  "black>=25.9.0",
  "mypy>=1.18.2",
  "pip-audit>=2.9.0",
  "yamllint>=1.37.1",
  "types-PyYAML>=6.0.12.20250915",
  "fastapi>=0.118.2",
  "starlette>=0.48.0",
  "types-protobuf>=5.26.0.20240422",
]
telemetry = [
  "opentelemetry-api>=1.37.0",
  "opentelemetry-sdk>=1.37.0",
  "opentelemetry-exporter-otlp>=1.37.0",
  "prometheus-client>=0.20.0",
]
api = ["fastapi>=0.118.2", "starlette>=0.48.0", "uvicorn[standard]>=0.37.0"]
grpc = ["grpcio>=1.68.0", "grpcio-tools>=1.68.0", "grpcio-reflection>=1.68.0"]

[project.scripts]
hephaestus = "hephaestus.cli:app"

[tool.hephaestus.toolkit]
default_config = "hephaestus-toolkit/refactoring/config/refactor.config.yaml"
workspace_root = "."

[tool.pytest.ini_options]
addopts = "-ra --cov=src/hephaestus --cov-report=term-missing --cov-report=xml"
pythonpath = ["src"]
filterwarnings = [
  "error",
] # Frontier standard: treat all warnings as errors to prevent quality degradation

[tool.black]
line-length = 100
target-version = ["py312"]

[tool.ruff]
line-length = 100
src = ["src", "tests", "hephaestus-toolkit"]
target-version = "py312"
extend-exclude = ["src/hephaestus/api/grpc/protos/*"]

[tool.ruff.lint]
select = [
  "E",
  "F",
  "I",
  "UP",
  "B",
  "C4",
] # Frontier linting profile: errors, imports, upgrades, bugs, comprehensions
ignore = ["E501"] # Line length handled by ruff format

[tool.ruff.format]
quote-style = "double"

[tool.ruff.lint.isort]
known-first-party = ["hephaestus", "hephaestus_toolkit", "tests"]
combine-as-imports = true

[tool.mypy]
python_version = "3.12"
plugins = ["pydantic.mypy"]
strict_optional = true
disallow_untyped_defs = true
warn_unused_ignores = true
warn_return_any = true
warn_redundant_casts = true
warn_unused_configs = true
mypy_path = ["src"]
exclude = ["plugin-templates/registry/artifacts/"]

[[tool.mypy.overrides]]
module = ["grpc.*", "grpc_reflection.*", "google.protobuf.*"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["hephaestus.api.grpc.protos.hephaestus_pb2_grpc"]
ignore_errors = true

[tool.coverage.run]
branch = true               # Enable branch coverage analysis
source = ["src/hephaestus"]

[tool.coverage.report]
fail_under = 85 # Frontier standard: minimum 85% test coverage
show_missing = true # Show lines not covered by tests
omit = [
  "src/hephaestus/api/grpc/protos/*",
  "src/hephaestus/api/grpc/services/*",
  "src/hephaestus/api/grpc/server.py",
]
