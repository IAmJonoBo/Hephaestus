name: Build Wheelhouse

on:
  release:
    types:
      - published

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: false

jobs:
  wheelhouse:
    name: Build wheelhouse artefact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event_name == 'release' && github.event.release.tag_name || github.ref }}

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.14"

      - name: Install uv
        run: python -m pip install --upgrade uv

      - name: Sync dependencies for packaging
        run: uv sync --extra dev

      - name: Scrub workspace cruft
        run: uv run hephaestus cleanup --deep-clean

      - name: Build package artefacts
        run: uv build

      - name: Capture package metadata
        id: metadata
        run: |
          python - <<'PY'
          import os
          import pathlib
          try:
              import tomllib as toml
          except ModuleNotFoundError:  # pragma: no cover
              import tomli as toml

          data = toml.loads(pathlib.Path("pyproject.toml").read_text())
          version = data["project"]["version"]
          archive = f"hephaestus-{version}-wheelhouse.tar.gz"

          output = pathlib.Path(os.environ["GITHUB_OUTPUT"])
          output.write_text(f"version={version}\narchive={archive}\n", encoding="utf-8")
          PY

      - name: Assemble wheelhouse
        run: |
          set -euo pipefail
          VERSION='${{ steps.metadata.outputs.version }}'
          ARCHIVE='${{ steps.metadata.outputs.archive }}'
          mkdir -p wheelhouse
          cp dist/* wheelhouse/
          tar -czf "$ARCHIVE" -C wheelhouse .
          mv "$ARCHIVE" wheelhouse/

      - name: Upload wheelhouse artefact
        uses: actions/upload-artifact@v4
        with:
          name: hephaestus-${{ steps.metadata.outputs.version }}-wheelhouse
          path: wheelhouse/
          if-no-files-found: error
          retention-days: 30

      - name: Attach wheelhouse to release
        if: github.event_name == 'release'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "${{ github.event.release.tag_name }}" "wheelhouse/${{ steps.metadata.outputs.archive }}" --clobber
