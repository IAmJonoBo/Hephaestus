---
name: Deploy Documentation

'on':
  push:
    branches: [main]
    paths:
      - docs-site/**
      - docs/**
      - .github/workflows/docs.yml
  pull_request:
    branches: [main]
    paths:
      - docs-site/**
      - docs/**
  workflow_dispatch:
  schedule:
    # Run daily to keep auto-updated content fresh
    - cron: 0 2 * * *

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: docs-${{ github.ref }}
  cancel-in-progress: true

jobs:
  update-content:
    name: Update Auto-Generated Content
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.12"

      - name: Install UV
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true

      - name: Install Python dependencies
        run: |
          uv sync --locked --extra dev --extra qa

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "22"
          cache: npm
          cache-dependency-path: docs-site/package-lock.json

      - name: Install Node dependencies
        working-directory: docs-site
        run: npm ci

      - name: Update CLI reference
        working-directory: docs-site
        run: npm run update-cli-reference || true

      - name: Sync changelog
        working-directory: docs-site
        run: npm run sync-changelog

      - name: Sync version
        working-directory: docs-site
        run: npm run sync-version

      - name: Update API docs
        working-directory: docs-site
        run: npm run update-api-docs

      - name: Commit auto-updates
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add docs-site/src/content/docs/
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "docs: auto-update generated content [skip ci]"
            git push
          fi

  validate:
    name: Validate Documentation
    runs-on: ubuntu-latest
    needs: update-content
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "22"
          cache: npm
          cache-dependency-path: docs-site/package-lock.json

      - name: Install dependencies
        working-directory: docs-site
        run: npm ci

      - name: Validate links
        working-directory: docs-site
        run: npm run validate-links

      - name: Validate examples
        working-directory: docs-site
        run: npm run validate-examples

      - name: Detect stale content
        working-directory: docs-site
        run: npm run prune-stale || true

      - name: Type check
        working-directory: docs-site
        run: npm run check

  build:
    name: Build Documentation Site
    runs-on: ubuntu-latest
    needs: validate
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "22"
          cache: npm
          cache-dependency-path: docs-site/package-lock.json

      - name: Install dependencies
        working-directory: docs-site
        run: npm ci

      - name: Build site
        working-directory: docs-site
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: docs-site/dist

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  preview:
    name: Preview Deployment
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    steps:
      - name: Comment PR
        uses: actions/github-script@v8
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ“š Documentation preview will be available after merge to main branch.'
            })
