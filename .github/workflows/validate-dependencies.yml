---
name: Validate Dependencies

# Runs on PRs to ensure uv.lock is in sync with pyproject.toml
# Especially important for dependabot PRs

'on':
  pull_request:
    paths:
      - "pyproject.toml"
      - "uv.lock"
      - ".github/workflows/validate-dependencies.yml"

permissions:
  contents: read
  pull-requests: write

jobs:
  validate:
    name: Validate Dependency Lock File
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup uv and Python
        uses: astral-sh/setup-uv@v7
        with:
          python-version: "3.12"
          enable-cache: true

      - name: Validate uv.lock is in sync
        id: validate
        run: |
          echo "Checking if uv.lock is in sync with pyproject.toml..."
          if uv lock --check; then
            echo "status=success" >> "$GITHUB_OUTPUT"
            echo "✅ uv.lock is in sync with pyproject.toml"
          else
            echo "status=failure" >> "$GITHUB_OUTPUT"
            echo "❌ uv.lock is out of sync with pyproject.toml"
            echo ""
            echo "To fix this, run:"
            echo "  uv lock"
            echo "  git add uv.lock"
            echo "  git commit -m 'chore: update uv.lock'"
            exit 1
          fi

      - name: Verify all extras are resolvable
        run: |
          echo "Verifying all extras can be resolved..."
          uv sync --locked --extra dev --extra qa --all-extras
          echo "✅ All extras resolved successfully"

      - name: Verify environment isolation
        run: |
          echo "Verifying environment uses isolated venv..."
          uv run python -c "import sys; print(f'sys.prefix: {sys.prefix}')"
          uv run python -c \
            "import sys; assert '.venv' in sys.prefix, \
            'Not using isolated venv'"
          echo "✅ Environment isolation verified"

      - name: Comment on PR (success)
        if: steps.validate.outputs.status == 'success'
        uses: actions/github-script@v8
        with:
          script: |
            const body = '✅ **Dependency validation passed**\n\n' +
              '- `uv.lock` is in sync with `pyproject.toml`\n' +
              '- All extras are resolvable\n' +
              '- Environment isolation verified';

            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.data.find(c =>
              c.user.type === 'Bot' &&
              c.body.includes('Dependency validation')
            );

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }

      - name: Comment on PR (failure)
        if: failure() && steps.validate.outputs.status == 'failure'
        uses: actions/github-script@v8
        with:
          script: |
            const body = '❌ **Dependency validation failed**\n\n' +
              '`uv.lock` is out of sync with `pyproject.toml`.\n\n' +
              '**To fix this:**\n' +
              '```bash\n' +
              'uv lock\n' +
              'git add uv.lock\n' +
              'git commit -m "chore: update uv.lock"\n' +
              '```\n\n' +
              'This ensures reproducible builds across all environments.';

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });
